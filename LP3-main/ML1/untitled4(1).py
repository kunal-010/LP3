# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1chft_Lq3MJy26jcho-FcZ-CFM3QgDiBR
"""

import numpy as np
import matplotlib.pyplot as plt 

def linear_reg(datapoints) : 
  x = [pt[0] for pt in datapoints]
  y = [pt[1] for pt in datapoints]

  n = len(x)
  plt.scatter(x,y)
  # plt.plot(x,y,color="green")
  plt.show()

  xx = [a*a for a in x]
  xy = [x[i] * y[i] for i in range(n)]

  sum_x = np.sum(x)
  sum_y = np.sum(y)
  sum_xx = np.sum(xx)
  sum_xy = np.sum(xy)

  m = (n * sum_xy - sum_x * sum_y) / (n * sum_xx - sum_x * sum_x)
  b = (sum_y - m * sum_x) / n
  return m , b

# Compute R2 Score
def get_r2_score(X, Y, b0, b1):

  print('\nR2 Score\n===========')
  
  sse = 0 # Residual Sum of Squares
  sst = 0 # Total Sum of Squares
  y_mean = sum(Y)/len(Y)
  for x,y in zip(X,Y):
    y_pred = b0+b1*x
    sse += ( (y-y_pred)*(y-y_pred) )
    sst += ( (y-y_mean)*(y-y_mean) )
  r2 = 1 - (sse/sst)
  print('R2 Score  = ',r2)

  return r2

datapoints=[
    (10,95),
    (9,80),
    (2,10),
    (15,50),
    (10,45),
    (16,98),
    (11,38),
    (16,93)
]

m, b = linear_reg (datapoints)

print(f'LINE EQUATION: y = {round(m,2)} * x + {round(b,2)}')

x=[d[0] for d in datapoints]
y=[d[1] for d in datapoints]

get_r2_score(x,y,m,b)

y_pred=[]
for point in datapoints:
    xp=point[0]
    y_pred.append(m*xp+b)

print(y_pred)

plt.scatter(x,y)
plt.plot(x,y_pred,color="green")
plt.show()