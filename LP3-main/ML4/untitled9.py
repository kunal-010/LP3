# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SjS1sNxxkLcjKhYsKCDDyrrFyw_IOQrX
"""

import math
import matplotlib.pyplot as plt

def md(x1,y1,x2,y2):
  return math.fabs(x1-x2) + math.fabs(y1-y2)

def assign(data,cen,labels):
  c1_x = cen[0][0]
  c1_y = cen[0][1]
  c2_x = cen[1][0]
  c2_y = cen[1][1]
  idx = 0
  for pt in data:
    x = pt[0]
    y = pt[1]
    dist1 = md(x,y,c1_x,c1_y)
    dist2 = md(x,y,c2_x,c2_y)
    if dist1 < dist2 :
      labels[idx] = 1
    else :
      labels[idx] = 2
    idx+=1
  return labels

def new_centroid(data,labels): 
  sum1_x = 0
  sum1_y = 0
  len1 = 0

  sum2_x = 0
  sum2_y = 0
  len2 = 0

  idx = 0
  for pt in data:
    if(labels[idx] == 1) :
      sum1_x += pt[0]
      sum1_y += pt[1]
      len1+=1
    else :
      sum2_x += pt[0]
      sum2_y += pt[1]
      len2+=1
    idx+=1
  centroid = []
  print(len2)
  centroid.append((sum1_x/len1,sum1_y/len1))
  centroid.append((sum2_x/len2,sum2_y/len2))
  return centroid

def Kmeans(datapoints,centroid,labels,old_labels): 

  while(labels!=old_labels):
    old_labels = labels.copy()

    labels = assign(datapoints,centroid,labels)
    centroid = new_centroid(datapoints,labels)
    print(centroid)
    print(labels)
  
  x = [pt[0] for pt in datapoints]
  y = [pt[1] for pt in datapoints]

  xc = [pt[0] for pt in centroid]
  yc = [pt[1] for pt in centroid]

  plt.scatter(x,y,color="blue")
  plt.scatter(xc,yc,color="red")
  plt.show()

datapoints = [
  (0.1,0.6),
  (0.15,0.71),
  (0.08,0.9),
  (0.16, 0.85),
  (0.2,0.3),
  (0.25,0.5),
  (0.24,0.1),
  (0.3,0.2)
]

#initial centroids
centroids = [
  (0.1,0.6),
  (0.3,0.2)
]

labels = [0]*8
old_labels = [-1]*8

Kmeans(datapoints,centroids,labels,old_labels)